{"version":3,"sources":["components/App/App.module.css","components/ContactList/ContactList.module.css","components/ContactForm/ContactForm.module.css","components/Filter/Filter.module.css","components/Container/Container.module.css","components/Input/Input.module.css","components/Label/Label.module.css","components/Container/Container.js","components/Input/Input.js","components/Label/Label.js","components/options.js","components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/Filter/Filter.js","components/App/App.js","index.js"],"names":["module","exports","Container","children","className","s","container","Input","id","type","name","value","handleChange","options","input","onChange","event","pattern","title","required","Label","label","htmlFor","number","ContactForm","state","nameInputId","uuidv4","numberInputId","currentTarget","setState","handleSubmit","preventDefault","props","onSubmit","reset","this","form","button","Component","ContactList","contactList","onDeleteContact","list","map","item","btn__delete","onClick","Filter","App","contacts","filter","checkName","newName","find","addContact","alert","newContact","prevState","deleteContact","contactId","contact","changeFilter","getFilteredContacts","normalizedFilter","toLowerCase","includes","localStorage","getItem","parsedContacts","JSON","parse","prevProps","setItem","stringify","filteredContacts","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iJACAA,EAAOC,QAAU,CAAC,MAAQ,qB,gBCA1BD,EAAOC,QAAU,CAAC,KAAO,0BAA0B,KAAO,0BAA0B,YAAc,mC,iBCAlGD,EAAOC,QAAU,CAAC,KAAO,0BAA0B,OAAS,8B,gBCA5DD,EAAOC,QAAU,CAAC,MAAQ,sBAAsB,MAAQ,wB,iBCAxDD,EAAOC,QAAU,CAAC,UAAY,+B,iBCA9BD,EAAOC,QAAU,CAAC,MAAQ,uB,gBCA1BD,EAAOC,QAAU,CAAC,MAAQ,uB,8LCSXC,EAPG,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACnB,OAAO,qBAAKC,UAAWC,IAAEC,UAAlB,SAA8BH,K,yCC0BxBI,EA5BD,SAAC,GAAsD,IAApDC,EAAmD,EAAnDA,GAAIC,EAA+C,EAA/CA,KAAMC,EAAyC,EAAzCA,KAAMC,EAAmC,EAAnCA,MAAOC,EAA4B,EAA5BA,aAAcC,EAAc,EAAdA,QACpD,OACE,uBACET,UAAWC,IAAES,MACbN,GAAIA,EACJC,KAAMA,EACNC,KAAMA,EACNC,MAAOA,EACPI,SAAU,SAAAC,GACRJ,EAAaI,IAEfC,QAASJ,EAAQI,QACjBC,MAAOL,EAAQK,MACfC,UAAQ,K,iBCECC,EAdD,SAAC,GAA6B,IAA3BZ,EAA0B,EAA1BA,GAAIU,EAAsB,EAAtBA,MAAOf,EAAe,EAAfA,SAC1B,OACE,wBAAOC,UAAWC,IAAEgB,MAAOC,QAASd,EAApC,UACGU,EACAf,MCMQU,EAbC,CACdH,KAAM,CACJO,QAAS,yHACTC,MACE,mcAEJK,OAAQ,CACNN,QAAS,iEACTC,MACE,kiBC2DSM,E,4MA3DbC,MAAQ,CACNf,KAAM,GACNa,OAAQ,I,EAEVG,YAAcC,c,EACdC,cAAgBD,c,EAEhBf,aAAe,SAAAI,GACb,MAAwBA,EAAMa,cAAtBnB,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MACd,EAAKmB,SAAL,eACGpB,EAAOC,K,EAIZoB,aAAe,SAAAf,GACbA,EAAMgB,iBACN,EAAKC,MAAMC,SAAS,EAAKT,OACzB,EAAKU,S,EAGPA,MAAQ,WACN,EAAKL,SAAS,CACZpB,KAAM,GACNa,OAAQ,M,4CAIZ,WACE,MAAyBa,KAAKX,MAAtBf,EAAR,EAAQA,KAAMa,EAAd,EAAcA,OAEd,OACE,uBAAMnB,UAAWC,IAAEgC,KAAMH,SAAUE,KAAKL,aAAxC,UACE,cAAC,EAAD,CAAOvB,GAAI4B,KAAKV,YAAaR,MAAM,OAAnC,SACE,cAAC,EAAD,CACEV,GAAI4B,KAAKV,YACTjB,KAAK,OACLC,KAAK,OACLC,MAAOD,EACPE,aAAcwB,KAAKxB,aACnBC,QAASA,EAAQH,SAGrB,cAAC,EAAD,CAAOF,GAAI4B,KAAKR,cAAeV,MAAM,SAArC,SACE,cAAC,EAAD,CACEV,GAAI4B,KAAKR,cACTnB,KAAK,MACLC,KAAK,SACLC,MAAOY,EACPX,aAAcwB,KAAKxB,aACnBC,QAASA,EAAQU,WAGrB,wBAAQnB,UAAWC,IAAEiC,OAAQ7B,KAAK,SAAlC,gC,GArDkB8B,a,gBCoBXC,EA1BK,SAAC,GAAsC,IAApCC,EAAmC,EAAnCA,YAAaC,EAAsB,EAAtBA,gBAClC,OACE,oBAAItC,UAAWC,IAAEsC,KAAjB,SACGF,EAAYG,KAAI,SAAAC,GACf,IAAQrC,EAAqBqC,EAArBrC,GAAIE,EAAiBmC,EAAjBnC,KAAMa,EAAWsB,EAAXtB,OAClB,OACE,qBAAanB,UAAWC,IAAEwC,KAA1B,UACGnC,EADH,KACWa,EACT,wBACEnB,UAAWC,IAAEyC,YACbrC,KAAK,SACLsC,QAAS,kBAAML,EAAgBlC,IAHjC,sBAFOA,S,iBCWJwC,EAjBA,SAAC,GAAyB,IAAvBrC,EAAsB,EAAtBA,MAAOI,EAAe,EAAfA,SACvB,OACE,wBAAOX,UAAWC,IAAEgB,MAApB,kCAEE,uBACEjB,UAAWC,IAAES,MACbL,KAAK,OACLE,MAAOA,EACPI,SAAUA,QCsFHkC,E,4MAtFbxB,MAAQ,CACNyB,SAAU,GACVC,OAAQ,I,EAGVC,UAAY,SAAAC,GAAO,OACjB,EAAK5B,MAAMyB,SAASI,MAAK,qBAAG5C,OAAoB2C,M,EAElDE,WAAa,YAAuB,IAApB7C,EAAmB,EAAnBA,KAAMa,EAAa,EAAbA,OACpB,GAAK,EAAK6B,UAAU1C,GAYpB8C,MAAM,GAAD,OAAI9C,EAAJ,gCAZL,CACE,IAAM+C,EAAa,CACjBjD,GAAImB,cACJjB,OACAa,UAGF,EAAKO,UAAS,SAAA4B,GAAS,MAAK,CAC1BR,SAAS,CAAEO,GAAH,mBAAkBC,EAAUR,iB,EAO1CS,cAAgB,SAAAC,GACd,EAAK9B,UAAS,SAAA4B,GAAS,MAAK,CAC1BR,SAAUQ,EAAUR,SAASC,QAAO,SAAAU,GAAO,OAAIA,EAAQrD,KAAOoD,U,EAGlEE,aAAe,SAAA9C,GACb,EAAKc,SAAS,CAAEqB,OAAQnC,EAAMa,cAAclB,S,EAG9CoD,oBAAsB,WACpB,MAA6B,EAAKtC,MAA1B0B,EAAR,EAAQA,OAAQD,EAAhB,EAAgBA,SACVc,EAAmBb,EAAOc,cAChC,OAAOf,EAASC,QAAO,SAAAU,GAAO,OAC5BA,EAAQnD,KAAKuD,cAAcC,SAASF,O,uDAGxC,WACE,IAAMd,EAAWiB,aAAaC,QAAQ,YAChCC,EAAiBC,KAAKC,MAAMrB,GAE9BmB,GACFjC,KAAKN,SAAS,CACZoB,SAAUmB,M,gCAKhB,SAAmBG,EAAWd,GACxBtB,KAAKX,MAAMyB,WAAaQ,EAAUR,UACpCiB,aAAaM,QAAQ,WAAYH,KAAKI,UAAUtC,KAAKX,MAAMyB,a,oBAI/D,WACE,MAA6Bd,KAAKX,MAA1B0B,EAAR,EAAQA,OAAQD,EAAhB,EAAgBA,SACVyB,EAAmBvC,KAAK2B,sBAE9B,OACE,qCACE,eAAC,EAAD,WACE,oBAAI3D,UAAWC,IAAEa,MAAjB,uBACA,cAAC,EAAD,CAAagB,SAAUE,KAAKmB,gBAE7BL,EAAS0B,OAAS,EACjB,eAAC,EAAD,WACE,oBAAIxE,UAAWC,IAAEa,MAAjB,sBACA,cAAC,EAAD,CAAQP,MAAOwC,EAAQpC,SAAUqB,KAAK0B,eACtC,cAAC,EAAD,CACErB,YAAakC,EACbjC,gBAAiBN,KAAKuB,mBAI1B,cAAC,EAAD,UACE,oBAAIvD,UAAWC,IAAEa,MAAjB,0C,GA/EMqB,aCJlBsC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.f7c3affc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"App_title__1YcTA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__2T7aG\",\"item\":\"ContactList_item__3YsZK\",\"btn__delete\":\"ContactList_btn__delete__2u4p9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1fuOn\",\"button\":\"ContactForm_button__1MLZK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__3DcZT\",\"input\":\"Filter_input__2DoVp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__3RIox\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Input_input__3PNbO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Label_label__2bY5z\"};","import PropTypes from 'prop-types';\n\nimport s from './Container.module.css';\nconst Container = ({ children }) => {\n  return <div className={s.container}>{children}</div>;\n};\n\nContainer.propTypes = {\n  children: PropTypes.node,\n};\nexport default Container;\n","import PropTypes from 'prop-types';\nimport s from './Input.module.css';\nconst Input = ({ id, type, name, value, handleChange, options }) => {\n  return (\n    <input\n      className={s.input}\n      id={id}\n      type={type}\n      name={name}\n      value={value}\n      onChange={event => {\n        handleChange(event);\n      }}\n      pattern={options.pattern}\n      title={options.title}\n      required\n    />\n  );\n};\n\nInput.propTypes = {\n  id: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  handleChange: PropTypes.func,\n  options: PropTypes.shape({\n    pattern: PropTypes.string,\n    title: PropTypes.string,\n  }),\n};\nexport default Input;\n","import PropTypes from 'prop-types';\nimport s from './Label.module.css';\n\nconst Label = ({ id, title, children }) => {\n  return (\n    <label className={s.label} htmlFor={id}>\n      {title}\n      {children}\n    </label>\n  );\n};\n\nLabel.propTypes = {\n  id: PropTypes.string.isRequired,\n  title: PropTypes.string,\n  children: PropTypes.object,\n};\nexport default Label;\n","const options = {\n  name: {\n    pattern: \"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\",\n    title:\n      \"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\",\n  },\n  number: {\n    pattern: '+?d{1,4}?[-.s]?(?d{1,3}?)?[-.s]?d{1,4}[-.s]?d{1,4}[-.s]?d{1,9}',\n    title:\n      'Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +',\n  },\n};\n\nexport default options;\n","import { Component } from 'react';\n\nimport { v4 as uuidv4 } from 'uuid';\nimport s from './ContactForm.module.css';\nimport Input from '../Input';\nimport Label from '../Label';\nimport options from '../options';\n\nclass ContactForm extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n  nameInputId = uuidv4();\n  numberInputId = uuidv4();\n\n  handleChange = event => {\n    const { name, value } = event.currentTarget;\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    this.props.onSubmit(this.state);\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({\n      name: '',\n      number: '',\n    });\n  };\n\n  render() {\n    const { name, number } = this.state;\n\n    return (\n      <form className={s.form} onSubmit={this.handleSubmit}>\n        <Label id={this.nameInputId} title=\"Name\">\n          <Input\n            id={this.nameInputId}\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            handleChange={this.handleChange}\n            options={options.name}\n          />\n        </Label>\n        <Label id={this.numberInputId} title=\"Number\">\n          <Input\n            id={this.numberInputId}\n            type=\"tel\"\n            name=\"number\"\n            value={number}\n            handleChange={this.handleChange}\n            options={options.number}\n          />\n        </Label>\n        <button className={s.button} type=\"submit\">\n          add Contact\n        </button>\n      </form>\n    );\n  }\n}\nexport default ContactForm;\n","import PropTypes from 'prop-types';\nimport s from './ContactList.module.css';\nconst ContactList = ({ contactList, onDeleteContact }) => {\n  return (\n    <ul className={s.list}>\n      {contactList.map(item => {\n        const { id, name, number } = item;\n        return (\n          <li key={id} className={s.item}>\n            {name}: {number}\n            <button\n              className={s.btn__delete}\n              type=\"button\"\n              onClick={() => onDeleteContact(id)}\n            >\n              Delete\n            </button>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nContactList.propTypes = {\n  contactList: PropTypes.array,\n  onDeleteContact: PropTypes.func.isRequired,\n};\nexport default ContactList;\n","import PropTypes from 'prop-types';\nimport s from './Filter.module.css';\nconst Filter = ({ value, onChange }) => {\n  return (\n    <label className={s.label}>\n      Find contacts by name\n      <input\n        className={s.input}\n        type=\"text\"\n        value={value}\n        onChange={onChange}\n      ></input>\n    </label>\n  );\n};\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func.isRequired,\n};\nexport default Filter;\n","import React, { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport s from './App.module.css';\nimport Container from '../Container';\nimport ContactForm from '../ContactForm';\nimport ContactList from '../ContactList/';\nimport Filter from '../Filter';\n\nclass App extends Component {\n  state = {\n    contacts: [],\n    filter: '',\n  };\n\n  checkName = newName =>\n    this.state.contacts.find(({ name }) => name === newName);\n\n  addContact = ({ name, number }) => {\n    if (!this.checkName(name)) {\n      const newContact = {\n        id: uuidv4(),\n        name,\n        number,\n      };\n\n      this.setState(prevState => ({\n        contacts: [newContact, ...prevState.contacts],\n      }));\n      return;\n    }\n    alert(`${name} is already in contacts`);\n  };\n\n  deleteContact = contactId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n  changeFilter = event => {\n    this.setState({ filter: event.currentTarget.value });\n  };\n\n  getFilteredContacts = () => {\n    const { filter, contacts } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n  componentDidMount() {\n    const contacts = localStorage.getItem('Contacts');\n    const parsedContacts = JSON.parse(contacts);\n\n    if (parsedContacts) {\n      this.setState({\n        contacts: parsedContacts,\n      });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem('Contacts', JSON.stringify(this.state.contacts));\n    }\n  }\n\n  render() {\n    const { filter, contacts } = this.state;\n    const filteredContacts = this.getFilteredContacts();\n\n    return (\n      <>\n        <Container>\n          <h1 className={s.title}>Phonebook</h1>\n          <ContactForm onSubmit={this.addContact} />\n        </Container>\n        {contacts.length > 0 ? (\n          <Container>\n            <h2 className={s.title}>Contacts</h2>\n            <Filter value={filter} onChange={this.changeFilter} />\n            <ContactList\n              contactList={filteredContacts}\n              onDeleteContact={this.deleteContact}\n            />\n          </Container>\n        ) : (\n          <Container>\n            <h2 className={s.title}>Phone book is empty</h2>\n          </Container>\n        )}\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}