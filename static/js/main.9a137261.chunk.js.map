{"version":3,"sources":["components/App/App.module.css","components/ContactList/ContactList.module.css","components/ContactForm/ContactForm.module.css","components/Filter/Filter.module.css","components/Container/Container.module.css","components/Input/Input.module.css","components/Label/Label.module.css","components/Container/Container.js","components/Input/Input.js","components/Label/Label.js","components/options.js","components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/Filter/Filter.js","components/App/App.js","index.js"],"names":["module","exports","Container","children","className","s","container","Input","id","type","name","value","handleChange","options","input","onChange","event","pattern","title","required","Label","label","htmlFor","number","ContactForm","onSubmit","useState","setName","setNumber","nameInputId","uuidv4","numberInputId","target","reset","form","preventDefault","autoComplete","button","ContactList","contactList","onDeleteContact","list","map","item","btn__delete","onClick","Filter","App","JSON","parse","localStorage","getItem","contacts","setContacts","filter","setFilter","useEffect","setItem","stringify","newName","find","alert","newContact","state","length","currentTarget","normalizedFilter","toLowerCase","contact","includes","getFilteredContacts","contactId","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9a137261.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"App_title__1YcTA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__2T7aG\",\"item\":\"ContactList_item__3YsZK\",\"btn__delete\":\"ContactList_btn__delete__2u4p9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1fuOn\",\"button\":\"ContactForm_button__1MLZK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__3DcZT\",\"input\":\"Filter_input__2DoVp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__3RIox\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Input_input__3PNbO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Label_label__2bY5z\"};","import PropTypes from 'prop-types';\n\nimport s from './Container.module.css';\nconst Container = ({ children }) => {\n  return <div className={s.container}>{children}</div>;\n};\n\nContainer.propTypes = {\n  children: PropTypes.node,\n};\nexport default Container;\n","import PropTypes from 'prop-types';\nimport s from './Input.module.css';\nconst Input = ({ id, type, name, value, handleChange, options }) => {\n  return (\n    <input\n      className={s.input}\n      id={id}\n      type={type}\n      name={name}\n      value={value}\n      onChange={event => {\n        handleChange(event);\n      }}\n      pattern={options.pattern}\n      title={options.title}\n      required\n    />\n  );\n};\n\nInput.propTypes = {\n  id: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  handleChange: PropTypes.func,\n  options: PropTypes.shape({\n    pattern: PropTypes.string,\n    title: PropTypes.string,\n  }),\n};\nexport default Input;\n","import PropTypes from 'prop-types';\nimport s from './Label.module.css';\n\nconst Label = ({ id, title, children }) => {\n  return (\n    <label className={s.label} htmlFor={id}>\n      {title}\n      {children}\n    </label>\n  );\n};\n\nLabel.propTypes = {\n  id: PropTypes.string.isRequired,\n  title: PropTypes.string,\n  children: PropTypes.object,\n};\nexport default Label;\n","const options = {\n  name: {\n    pattern: \"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\",\n    title:\n      \"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\",\n  },\n  number: {\n    pattern: '+?d{1,4}?[-.s]?(?d{1,3}?)?[-.s]?d{1,4}[-.s]?d{1,4}[-.s]?d{1,9}',\n    title:\n      'Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +',\n  },\n};\n\nexport default options;\n","import { useState } from 'react';\n\nimport { v4 as uuidv4 } from 'uuid';\nimport s from './ContactForm.module.css';\nimport Input from '../Input';\nimport Label from '../Label';\nimport options from '../options';\n\nexport default function ContactForm({ onSubmit }) {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const nameInputId = uuidv4();\n  const numberInputId = uuidv4();\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    onSubmit(name, number);\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form className={s.form} onSubmit={handleSubmit} autoComplete=\"off\">\n      <Label id={nameInputId} title=\"Name\">\n        <Input\n          id={nameInputId}\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          handleChange={handleChange}\n          options={options.name}\n        />\n      </Label>\n      <Label id={numberInputId} title=\"Number\">\n        <Input\n          id={numberInputId}\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          handleChange={handleChange}\n          options={options.number}\n        />\n      </Label>\n      <button className={s.button} type=\"submit\">\n        add Contact\n      </button>\n    </form>\n  );\n}\n\n// class OldContactForm extends Component {\n//   state = {\n//     name: '',\n//     number: '',\n//   };\n//   nameInputId = uuidv4();\n//   numberInputId = uuidv4();\n\n//   handleChange = event => {\n//     const { name, value } = event.currentTarget;\n//     this.setState({\n//       [name]: value,\n//     });\n//   };\n\n//   handleSubmit = event => {\n//     event.preventDefault();\n//     this.props.onSubmit(this.state);\n//     this.reset();\n//   };\n\n//   reset = () => {\n//     this.setState({\n//       name: '',\n//       number: '',\n//     });\n//   };\n\n//   render() {\n//     const { name, number } = this.state;\n\n//     return (\n//       <form className={s.form} onSubmit={this.handleSubmit}>\n//         <Label id={this.nameInputId} title=\"Name\">\n//           <Input\n//             id={this.nameInputId}\n//             type=\"text\"\n//             name=\"name\"\n//             value={name}\n//             handleChange={this.handleChange}\n//             options={options.name}\n//           />\n//         </Label>\n//         <Label id={this.numberInputId} title=\"Number\">\n//           <Input\n//             id={this.numberInputId}\n//             type=\"tel\"\n//             name=\"number\"\n//             value={number}\n//             handleChange={this.handleChange}\n//             options={options.number}\n//           />\n//         </Label>\n//         <button className={s.button} type=\"submit\">\n//           add Contact\n//         </button>\n//       </form>\n//     );\n//   }\n// }\n","import PropTypes from 'prop-types';\nimport s from './ContactList.module.css';\nconst ContactList = ({ contactList, onDeleteContact }) => {\n  return (\n    <ul className={s.list}>\n      {contactList.map(item => {\n        const { id, name, number } = item;\n        return (\n          <li key={id} className={s.item}>\n            {name}: {number}\n            <button\n              className={s.btn__delete}\n              type=\"button\"\n              onClick={() => onDeleteContact(id)}\n            >\n              Delete\n            </button>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nContactList.propTypes = {\n  contactList: PropTypes.array,\n  onDeleteContact: PropTypes.func.isRequired,\n};\nexport default ContactList;\n","import PropTypes from 'prop-types';\nimport s from './Filter.module.css';\nconst Filter = ({ value, onChange }) => {\n  return (\n    <label className={s.label}>\n      Find contacts by name\n      <input\n        className={s.input}\n        type=\"text\"\n        value={value}\n        onChange={onChange}\n      ></input>\n    </label>\n  );\n};\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func.isRequired,\n};\nexport default Filter;\n","import { useState, useEffect } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport s from './App.module.css';\nimport Container from '../Container';\nimport ContactForm from '../ContactForm';\nimport ContactList from '../ContactList/';\nimport Filter from '../Filter';\n\nexport default function App() {\n  const [contacts, setContacts] = useState(\n    JSON.parse(localStorage.getItem('Contacts')) ?? '',\n  );\n  const [filter, setFilter] = useState('');\n  const checkName = newName => contacts.find(({ name }) => name === newName);\n  const addContact = (name, number) => {\n    if (!checkName(name)) {\n      const newContact = {\n        id: uuidv4(),\n        name,\n        number,\n      };\n      setContacts(state => [...state, newContact]);\n      return;\n    }\n    alert(`${name} is already in contacts`);\n  };\n\n  const deleteContact = contactId => {\n    setContacts(contacts.filter(contact => contact.id !== contactId));\n  };\n\n  const changeFilter = event => {\n    setFilter(event.currentTarget.value);\n  };\n\n  const getFilteredContacts = () => {\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  useEffect(() => {\n    localStorage.setItem('Contacts', JSON.stringify(contacts));\n  }, [contacts]);\n\n  return (\n    <>\n      <Container>\n        <h1 className={s.title}>Phonebook</h1>\n        <ContactForm onSubmit={addContact} />\n      </Container>\n      {contacts.length > 0 ? (\n        <Container>\n          <h2 className={s.title}>Contacts</h2>\n          <Filter value={filter} onChange={changeFilter} />\n          <ContactList\n            contactList={getFilteredContacts()}\n            onDeleteContact={deleteContact}\n          />\n        </Container>\n      ) : (\n        <Container>\n          <h2 className={s.title}>Phone book is empty</h2>\n        </Container>\n      )}\n    </>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}